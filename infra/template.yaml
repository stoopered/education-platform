AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless AIâ€‘Powered Learning Platform

Globals:
  Function:
    Runtime: python3.11
    MemorySize: 256
    Timeout: 10
    Environment:
      Variables:
        TABLE_NAME: !Ref StudentProgressTable

Resources:
  ## Storage
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
  AssetBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  ## Database
  StudentProgressTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: studentId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: studentId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ## Authentication
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: education-platform-user-pool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: education-platform-web-client
      GenerateSecret: false
      UserPoolId: !Ref UserPool

  ## API Gateway
  EducationApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod
      CorsConfiguration:
        AllowOrigins:
          - "http://localhost:3000"
          - "http://127.0.0.1:3000"
        AllowMethods:
          - GET
          - POST
        AllowHeaders:
          - Content-Type
          - Authorization
        MaxAge: 600

  ## Lambda Functions
  GetLessonsFunction:
    Type: AWS::Serverless::Function
    Properties:
      # Package the entire backend so the shared lessons directory is included
      Handler: backend/lambdas/getLessons/lambda_function.lambda_handler
      CodeUri: ../backend/
      Events:
        GetLessons:
          Type: HttpApi
          Properties:
            Path: /lessons
            Method: GET
            ApiId: !Ref EducationApi
      Environment:
        Variables:
          TABLE_NAME: !Ref StudentProgressTable
      Policies:
        # Basic execution plus permission to read from the lessons file embedded in the function.  No external resources.
        - AWSLambdaBasicExecutionRole

  SubmitAnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: ../backend/lambdas/submitAnswer/
      Events:
        SubmitAnswer:
          Type: HttpApi
          Properties:
            Path: /answer
            Method: POST
            ApiId: !Ref EducationApi
      Environment:
        Variables:
          TABLE_NAME: !Ref StudentProgressTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref StudentProgressTable

  TrackProgressFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: ../backend/lambdas/trackProgress/
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
            Enabled: true
      Environment:
        Variables:
          TABLE_NAME: !Ref StudentProgressTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref StudentProgressTable

  GenerateReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: ../backend/lambdas/generateReport/
      Events:
        GenerateReport:
          Type: HttpApi
          Properties:
            Path: /report
            Method: POST
            ApiId: !Ref EducationApi
      Environment:
        Variables:
          TABLE_NAME: !Ref StudentProgressTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref StudentProgressTable
        - S3CrudPolicy:
            BucketName: !Ref AssetBucket
        - Statement:
            Effect: Allow
            Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Resource: "*"

  GetCalendarFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: ../backend/lambdas/getCalendar/
      Events:
        GetCalendar:
          Type: HttpApi
          Properties:
            Path: /calendar
            Method: GET
            ApiId: !Ref EducationApi
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref AssetBucket

  GetLearningStyleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: ../backend/lambdas/getLearningStyle/
      Events:
        GetLearningStyle:
          Type: HttpApi
          Properties:
            Path: /learning-style
            Method: GET
            ApiId: !Ref EducationApi
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref StudentProgressTable

  AiTutorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: ../backend/lambdas/aiTutor/
      Events:
        AiTutor:
          Type: HttpApi
          Properties:
            Path: /ai
            Method: POST
            ApiId: !Ref EducationApi
      Environment:
        Variables:
          AI_PROVIDER: !Ref AiProvider
          OPENAI_API_KEY: !Ref OpenAiApiKey
          OPENAI_MODEL: !Ref OpenAiModel
          BEDROCK_MODEL: !Ref BedrockModel
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action:
              - bedrock:InvokeModel
            Resource: "*"
Parameters:
  AiProvider:
    Type: String
    Default: "none"
    AllowedValues:
      - none
      - openai
      - bedrock
    Description: "Which AI provider to use (openai or bedrock)."
  OpenAiApiKey:
    Type: String
    Default: ""
    NoEcho: true
    Description: "OpenAI API key (only required if AI_PROVIDER=openai)."
  OpenAiModel:
    Type: String
    Default: "gpt-3.5-turbo"
    Description: "OpenAI model name."
  BedrockModel:
    Type: String
    Default: "anthropic.claude-instant-v1"
    Description: "Amazon Bedrock model identifier."

Outputs:
  ApiUrl:
    Description: "HTTP API endpoint URL"
    Value: !Sub "https://${EducationApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  WebsiteBucketName:
    Value: !Ref WebsiteBucket
  AssetBucketName:
    Value: !Ref AssetBucket
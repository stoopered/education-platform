import React, { useEffect, useState } from 'react';
import { Amplify, API, Auth } from 'aws-amplify';

/*
 * Configure Amplify here.  At runtime the values for region, user pool and
 * API endpoint will be injected via environment variables (for example using
 * the `aws-exports.js` file generated by `amplify init` or via a config
 * fetched from S3).  The example below uses placeholders.
 */
Amplify.configure({
  Auth: {
    region: process.env.REACT_APP_REGION,
    userPoolId: process.env.REACT_APP_USER_POOL_ID,
    userPoolWebClientId: process.env.REACT_APP_USER_POOL_CLIENT,
  },
  API: {
    endpoints: [
      {
        name: 'EducationApi',
        endpoint: process.env.REACT_APP_API_URL,
        region: process.env.REACT_APP_REGION,
      },
    ],
  },
});

export default function App() {
  const [lessons, setLessons] = useState(null);
  const [loading, setLoading] = useState(false);

  // Example: fetch today’s lessons when the component mounts
  useEffect(() => {
    const fetchLessons = async () => {
      setLoading(true);
      try {
        const res = await API.get('EducationApi', '/lessons', {});
        setLessons(res);
      } catch (err) {
        console.error('Failed to fetch lessons', err);
      } finally {
        setLoading(false);
      }
    };
    fetchLessons();
  }, []);

  return (
    <main style={{ padding: '2rem', fontFamily: 'sans-serif' }}>
      <h1>Education Platform</h1>
      {loading && <p>Loading today’s lesson…</p>}
      {lessons && (
        <div>
          <h2>{lessons.title}</h2>
          <p>{lessons.description}</p>
          {/* Render questions, games and audio links here */}
        </div>
      )}
    </main>
  );
}